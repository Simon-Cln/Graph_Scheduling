{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calar\\\\OneDrive\\\\Bureau\\\\Graph_Scheduling\\\\SchedulingInterface\\\\src\\\\components\\\\GraphDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport { Network } from 'vis-network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphDisplay = ({\n  data\n}) => {\n  _s();\n  const networkRef = useRef(null);\n  useEffect(() => {\n    if (!networkRef.current) return;\n    const nodes = data.graph.nodes.map(node => ({\n      ...node,\n      title: `Tâche ${node.label}<br>\n                   Durée: ${node.duration}<br>\n                   Date au plus tôt: ${node.early_date}<br>\n                   Date au plus tard: ${node.late_date}<br>\n                   Marge totale: ${node.total_margin}<br>\n                   Marge libre: ${node.free_margin}`,\n      color: {\n        background: data.criticalPath.includes(node.id) ? '#ff7675' : '#74b9ff',\n        border: data.criticalPath.includes(node.id) ? '#d63031' : '#0984e3',\n        highlight: {\n          background: data.criticalPath.includes(node.id) ? '#fab1a0' : '#a0d8ef',\n          border: data.criticalPath.includes(node.id) ? '#ff7675' : '#74b9ff'\n        }\n      }\n    }));\n    const edges = data.graph.edges.map(edge => ({\n      ...edge,\n      arrows: 'to',\n      color: {\n        color: '#636e72',\n        highlight: '#2d3436'\n      }\n    }));\n    const network = new Network(networkRef.current, {\n      nodes,\n      edges\n    }, {\n      nodes: {\n        shape: 'circle',\n        font: {\n          size: 16,\n          color: '#2d3436'\n        },\n        borderWidth: 2,\n        shadow: true\n      },\n      edges: {\n        width: 2,\n        shadow: true,\n        font: {\n          size: 12,\n          align: 'middle'\n        }\n      },\n      layout: {\n        hierarchical: {\n          direction: 'LR',\n          sortMethod: 'directed',\n          levelSeparation: 150,\n          nodeSpacing: 100\n        }\n      },\n      physics: false\n    });\n    return () => {\n      network.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: networkRef,\n    sx: {\n      height: '600px',\n      width: '100%',\n      bgcolor: 'background.paper',\n      borderRadius: 1,\n      boxShadow: 1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(GraphDisplay, \"IUsF/UgtM5rhnA46ANlZR06rDDI=\");\n_c = GraphDisplay;\nexport default GraphDisplay;\nvar _c;\n$RefreshReg$(_c, \"GraphDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","Box","Network","jsxDEV","_jsxDEV","GraphDisplay","data","_s","networkRef","current","nodes","graph","map","node","title","label","duration","early_date","late_date","total_margin","free_margin","color","background","criticalPath","includes","id","border","highlight","edges","edge","arrows","network","shape","font","size","borderWidth","shadow","width","align","layout","hierarchical","direction","sortMethod","levelSeparation","nodeSpacing","physics","destroy","ref","sx","height","bgcolor","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/calar/OneDrive/Bureau/Graph_Scheduling/SchedulingInterface/src/components/GraphDisplay.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport { Network } from 'vis-network';\nimport { GraphData, Node, Edge } from '../types/graphTypes';\n\ninterface GraphDisplayProps {\n    data: GraphData;\n}\n\nconst GraphDisplay: React.FC<GraphDisplayProps> = ({ data }) => {\n    const networkRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!networkRef.current) return;\n\n        const nodes = data.graph.nodes.map(node => ({\n            ...node,\n            title: `Tâche ${node.label}<br>\n                   Durée: ${node.duration}<br>\n                   Date au plus tôt: ${node.early_date}<br>\n                   Date au plus tard: ${node.late_date}<br>\n                   Marge totale: ${node.total_margin}<br>\n                   Marge libre: ${node.free_margin}`,\n            color: {\n                background: data.criticalPath.includes(node.id) ? '#ff7675' : '#74b9ff',\n                border: data.criticalPath.includes(node.id) ? '#d63031' : '#0984e3',\n                highlight: {\n                    background: data.criticalPath.includes(node.id) ? '#fab1a0' : '#a0d8ef',\n                    border: data.criticalPath.includes(node.id) ? '#ff7675' : '#74b9ff'\n                }\n            }\n        }));\n\n        const edges = data.graph.edges.map(edge => ({\n            ...edge,\n            arrows: 'to',\n            color: {\n                color: '#636e72',\n                highlight: '#2d3436'\n            }\n        }));\n\n        const network = new Network(networkRef.current, { nodes, edges }, {\n            nodes: {\n                shape: 'circle',\n                font: {\n                    size: 16,\n                    color: '#2d3436'\n                },\n                borderWidth: 2,\n                shadow: true\n            },\n            edges: {\n                width: 2,\n                shadow: true,\n                font: {\n                    size: 12,\n                    align: 'middle'\n                }\n            },\n            layout: {\n                hierarchical: {\n                    direction: 'LR',\n                    sortMethod: 'directed',\n                    levelSeparation: 150,\n                    nodeSpacing: 100\n                }\n            },\n            physics: false\n        });\n\n        return () => {\n            network.destroy();\n        };\n    }, [data]);\n\n    return (\n        <Box\n            ref={networkRef}\n            sx={{\n                height: '600px',\n                width: '100%',\n                bgcolor: 'background.paper',\n                borderRadius: 1,\n                boxShadow: 1\n            }}\n        />\n    );\n};\n\nexport default GraphDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}