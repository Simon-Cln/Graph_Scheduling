{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calar\\\\OneDrive\\\\Bureau\\\\Graph_Scheduling\\\\SchedulingInterface\\\\src\\\\components\\\\CriticalPathDisplay.tsx\";\nimport React from 'react';\nimport { Paper, Typography, Box, Chip, Divider, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CriticalPathDisplay = ({\n  criticalPath,\n  tasks\n}) => {\n  const getTotalDuration = () => {\n    return criticalPath.reduce((total, taskId) => {\n      const task = tasks.find(t => t.id === taskId);\n      return total + ((task === null || task === void 0 ? void 0 : task.duration) || 0);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Critical Path Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: `Total Duration: ${getTotalDuration()} units`,\n        color: \"primary\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `${criticalPath.length} Tasks`,\n        color: \"secondary\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: criticalPath.map((taskId, index) => {\n        const task = tasks.find(t => t.id === taskId);\n        if (!task) return null;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Task ${task.id}`,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                children: [\"Duration: \", task.duration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                children: [\"Early Start: \", task.early]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                children: [\"Late Start: \", task.late]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"error\",\n                children: [\"Margin: \", task.margin]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, taskId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = CriticalPathDisplay;\nexport default CriticalPathDisplay;\nvar _c;\n$RefreshReg$(_c, \"CriticalPathDisplay\");","map":{"version":3,"names":["React","Paper","Typography","Box","Chip","Divider","List","ListItem","ListItemText","jsxDEV","_jsxDEV","Fragment","_Fragment","CriticalPathDisplay","criticalPath","tasks","getTotalDuration","reduce","total","taskId","task","find","t","id","duration","sx","p","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","label","color","length","my","map","index","primary","secondary","component","early","late","margin","_c","$RefreshReg$"],"sources":["C:/Users/calar/OneDrive/Bureau/Graph_Scheduling/SchedulingInterface/src/components/CriticalPathDisplay.tsx"],"sourcesContent":["import React from 'react';\nimport { \n    Paper, \n    Typography, \n    Box,\n    Chip,\n    Divider,\n    List,\n    ListItem,\n    ListItemText\n} from '@mui/material';\n\ninterface CriticalPathDisplayProps {\n    criticalPath: number[];\n    tasks: {\n        id: number;\n        duration: number;\n        early: number;\n        late: number;\n        margin: number;\n    }[];\n}\n\nconst CriticalPathDisplay: React.FC<CriticalPathDisplayProps> = ({ criticalPath, tasks }) => {\n    const getTotalDuration = () => {\n        return criticalPath.reduce((total, taskId) => {\n            const task = tasks.find(t => t.id === taskId);\n            return total + (task?.duration || 0);\n        }, 0);\n    };\n\n    return (\n        <Paper sx={{ p: 3, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n                Critical Path Analysis\n            </Typography>\n            <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                <Chip \n                    label={`Total Duration: ${getTotalDuration()} units`}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                />\n                <Chip \n                    label={`${criticalPath.length} Tasks`}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                />\n            </Box>\n            <Divider sx={{ my: 2 }} />\n            <List>\n                {criticalPath.map((taskId, index) => {\n                    const task = tasks.find(t => t.id === taskId);\n                    if (!task) return null;\n\n                    return (\n                        <ListItem key={taskId}>\n                            <ListItemText\n                                primary={`Task ${task.id}`}\n                                secondary={\n                                    <>\n                                        <Typography component=\"span\" variant=\"body2\">\n                                            Duration: {task.duration}\n                                        </Typography>\n                                        <br />\n                                        <Typography component=\"span\" variant=\"body2\">\n                                            Early Start: {task.early}\n                                        </Typography>\n                                        <br />\n                                        <Typography component=\"span\" variant=\"body2\">\n                                            Late Start: {task.late}\n                                        </Typography>\n                                        <br />\n                                        <Typography component=\"span\" variant=\"body2\" color=\"error\">\n                                            Margin: {task.margin}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Paper>\n    );\n};\n\nexport default CriticalPathDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,KAAK,EACLC,UAAU,EACVC,GAAG,EACHC,IAAI,EACJC,OAAO,EACPC,IAAI,EACJC,QAAQ,EACRC,YAAY,QACT,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAavB,MAAMC,mBAAuD,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAM,CAAC,KAAK;EACzF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,OAAOF,YAAY,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1C,MAAMC,IAAI,GAAGL,KAAK,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAAC;MAC7C,OAAOD,KAAK,IAAI,CAAAE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,QAAQ,KAAI,CAAC,CAAC;IACxC,CAAC,EAAE,CAAC,CAAC;EACT,CAAC;EAED,oBACId,OAAA,CAACT,KAAK;IAACwB,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACvBlB,OAAA,CAACR,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbxB,OAAA,CAACP,GAAG;MAACsB,EAAE,EAAE;QAAEU,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,CAAC;QAAET,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACxClB,OAAA,CAACN,IAAI;QACDiC,KAAK,EAAE,mBAAmBrB,gBAAgB,CAAC,CAAC,QAAS;QACrDsB,KAAK,EAAC,SAAS;QACfT,OAAO,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFxB,OAAA,CAACN,IAAI;QACDiC,KAAK,EAAE,GAAGvB,YAAY,CAACyB,MAAM,QAAS;QACtCD,KAAK,EAAC,WAAW;QACjBT,OAAO,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNxB,OAAA,CAACL,OAAO;MAACoB,EAAE,EAAE;QAAEe,EAAE,EAAE;MAAE;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BxB,OAAA,CAACJ,IAAI;MAAAsB,QAAA,EACAd,YAAY,CAAC2B,GAAG,CAAC,CAACtB,MAAM,EAAEuB,KAAK,KAAK;QACjC,MAAMtB,IAAI,GAAGL,KAAK,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAAC;QAC7C,IAAI,CAACC,IAAI,EAAE,OAAO,IAAI;QAEtB,oBACIV,OAAA,CAACH,QAAQ;UAAAqB,QAAA,eACLlB,OAAA,CAACF,YAAY;YACTmC,OAAO,EAAE,QAAQvB,IAAI,CAACG,EAAE,EAAG;YAC3BqB,SAAS,eACLlC,OAAA,CAAAE,SAAA;cAAAgB,QAAA,gBACIlB,OAAA,CAACR,UAAU;gBAAC2C,SAAS,EAAC,MAAM;gBAAChB,OAAO,EAAC,OAAO;gBAAAD,QAAA,GAAC,YAC/B,EAACR,IAAI,CAACI,QAAQ;cAAA;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACbxB,OAAA;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNxB,OAAA,CAACR,UAAU;gBAAC2C,SAAS,EAAC,MAAM;gBAAChB,OAAO,EAAC,OAAO;gBAAAD,QAAA,GAAC,eAC5B,EAACR,IAAI,CAAC0B,KAAK;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACbxB,OAAA;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNxB,OAAA,CAACR,UAAU;gBAAC2C,SAAS,EAAC,MAAM;gBAAChB,OAAO,EAAC,OAAO;gBAAAD,QAAA,GAAC,cAC7B,EAACR,IAAI,CAAC2B,IAAI;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC,eACbxB,OAAA;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNxB,OAAA,CAACR,UAAU;gBAAC2C,SAAS,EAAC,MAAM;gBAAChB,OAAO,EAAC,OAAO;gBAACS,KAAK,EAAC,OAAO;gBAAAV,QAAA,GAAC,UAC/C,EAACR,IAAI,CAAC4B,MAAM;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC;YAAA,eACf;UACL;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC,GAtBSf,MAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBX,CAAC;MAEnB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEhB,CAAC;AAACe,EAAA,GA7DIpC,mBAAuD;AA+D7D,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}