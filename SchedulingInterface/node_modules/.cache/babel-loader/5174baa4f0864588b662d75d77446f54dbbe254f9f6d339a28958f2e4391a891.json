{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calar\\\\OneDrive\\\\Bureau\\\\Graph_Scheduling\\\\SchedulingInterface\\\\src\\\\components\\\\ResultsTable.tsx\";\nimport React from 'react';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResultsTable = ({\n  tasks,\n  type,\n  criticalPath\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      mt: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 2,\n        fontFamily: 'NoiGrotesk',\n        fontWeight: 'bold'\n      },\n      children: type === 'ranks' ? 'Rangs des tâches' : 'Calendriers et marges'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontFamily: 'NoiGrotesk',\n                fontWeight: 'bold'\n              },\n              children: \"T\\xE2che\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), type === 'ranks' ? /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontFamily: 'NoiGrotesk',\n                fontWeight: 'bold'\n              },\n              children: \"Rang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk',\n                  fontWeight: 'bold'\n                },\n                children: \"Date au plus t\\xF4t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk',\n                  fontWeight: 'bold'\n                },\n                children: \"Date au plus tard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk',\n                  fontWeight: 'bold'\n                },\n                children: \"Marge totale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk',\n                  fontWeight: 'bold'\n                },\n                children: \"Marge libre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: criticalPath.includes(task.task) ? 'rgba(231, 76, 60, 0.1)' : 'inherit'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontFamily: 'NoiGrotesk',\n                fontWeight: criticalPath.includes(task.task) ? 'bold' : 'normal'\n              },\n              children: task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), type === 'ranks' ? /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontFamily: 'NoiGrotesk'\n              },\n              children: task.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk'\n                },\n                children: task.early_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk'\n                },\n                children: task.late_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk'\n                },\n                children: task.total_margin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontFamily: 'NoiGrotesk'\n                },\n                children: task.free_margin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","ResultsTable","tasks","type","criticalPath","elevation","sx","p","mt","children","variant","mb","fontFamily","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","backgroundColor","includes","rank","early_date","late_date","total_margin","free_margin","_c","$RefreshReg$"],"sources":["C:/Users/calar/OneDrive/Bureau/Graph_Scheduling/SchedulingInterface/src/components/ResultsTable.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  Paper, \n  Table, \n  TableBody, \n  TableCell, \n  TableContainer, \n  TableHead, \n  TableRow, \n  Typography \n} from '@mui/material';\n\ninterface Task {\n  task: string;\n  rank?: number;\n  early_date?: number;\n  late_date?: number;\n  total_margin?: number;\n  free_margin?: number;\n}\n\ninterface ResultsTableProps {\n  tasks: Task[];\n  type: 'ranks' | 'calendar';\n  criticalPath: string[];\n}\n\nconst ResultsTable: React.FC<ResultsTableProps> = ({ tasks, type, criticalPath }) => {\n  return (\n    <Paper elevation={3} sx={{ p: 2, mt: 3 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2, fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>\n        {type === 'ranks' ? 'Rangs des tâches' : 'Calendriers et marges'}\n      </Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>Tâche</TableCell>\n              {type === 'ranks' ? (\n                <TableCell sx={{ fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>Rang</TableCell>\n              ) : (\n                <>\n                  <TableCell sx={{ fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>Date au plus tôt</TableCell>\n                  <TableCell sx={{ fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>Date au plus tard</TableCell>\n                  <TableCell sx={{ fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>Marge totale</TableCell>\n                  <TableCell sx={{ fontFamily: 'NoiGrotesk', fontWeight: 'bold' }}>Marge libre</TableCell>\n                </>\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tasks.map((task, index) => (\n              <TableRow \n                key={index}\n                sx={{\n                  backgroundColor: criticalPath.includes(task.task) ? 'rgba(231, 76, 60, 0.1)' : 'inherit'\n                }}\n              >\n                <TableCell sx={{ \n                  fontFamily: 'NoiGrotesk',\n                  fontWeight: criticalPath.includes(task.task) ? 'bold' : 'normal'\n                }}>\n                  {task.task}\n                </TableCell>\n                {type === 'ranks' ? (\n                  <TableCell sx={{ fontFamily: 'NoiGrotesk' }}>{task.rank}</TableCell>\n                ) : (\n                  <>\n                    <TableCell sx={{ fontFamily: 'NoiGrotesk' }}>{task.early_date}</TableCell>\n                    <TableCell sx={{ fontFamily: 'NoiGrotesk' }}>{task.late_date}</TableCell>\n                    <TableCell sx={{ fontFamily: 'NoiGrotesk' }}>{task.total_margin}</TableCell>\n                    <TableCell sx={{ fontFamily: 'NoiGrotesk' }}>{task.free_margin}</TableCell>\n                  </>\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default ResultsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}