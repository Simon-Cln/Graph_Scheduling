{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calar\\\\OneDrive\\\\Bureau\\\\Graph_Scheduling\\\\Graph_Scheduling\\\\SchedulingInterface\\\\src\\\\components\\\\MatrixDisplay.tsx\";\nimport React from 'react';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixDisplay = ({\n  matrix\n}) => {\n  if (!matrix || matrix.length === 0) return null;\n  const headers = [''].concat(Array.from({\n    length: matrix.length\n  }, (_, i) => i === 0 ? 'α' : i === matrix.length - 1 ? 'ω' : i.toString()));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      margin: 2,\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Matrice des valeurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: headers.map((header, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: header\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: rowIndex === 0 ? 'α' : rowIndex === matrix.length - 1 ? 'ω' : rowIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: cell\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this))]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = MatrixDisplay;\nexport default MatrixDisplay;\nvar _c;\n$RefreshReg$(_c, \"MatrixDisplay\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","jsxDEV","_jsxDEV","MatrixDisplay","matrix","length","headers","concat","Array","from","_","i","toString","sx","margin","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","size","map","header","index","align","row","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/calar/OneDrive/Bureau/Graph_Scheduling/Graph_Scheduling/SchedulingInterface/src/components/MatrixDisplay.tsx"],"sourcesContent":["import React from 'react';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\n\ninterface MatrixDisplayProps {\n    matrix: (string | number)[][];\n}\n\nconst MatrixDisplay: React.FC<MatrixDisplayProps> = ({ matrix }) => {\n    if (!matrix || matrix.length === 0) return null;\n\n    const headers = [''].concat(\n        Array.from({ length: matrix.length }, (_, i) => \n            i === 0 ? 'α' : i === matrix.length - 1 ? 'ω' : i.toString()\n        )\n    );\n\n    return (\n        <Paper sx={{ margin: 2, padding: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n                Matrice des valeurs\n            </Typography>\n            <TableContainer>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            {headers.map((header, index) => (\n                                <TableCell key={index} align=\"center\">\n                                    {header}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {matrix.map((row, rowIndex) => (\n                            <TableRow key={rowIndex}>\n                                <TableCell align=\"center\">\n                                    {rowIndex === 0 ? 'α' : rowIndex === matrix.length - 1 ? 'ω' : rowIndex}\n                                </TableCell>\n                                {row.map((cell, cellIndex) => (\n                                    <TableCell key={cellIndex} align=\"center\">\n                                        {cell}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n    );\n};\n\nexport default MatrixDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}